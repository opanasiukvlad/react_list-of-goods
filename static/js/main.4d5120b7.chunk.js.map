{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","handleStart","setState","handleSortAlphabeticaly","ALPABET","handleSortLength","LENGTH","handleReverse","handleReset","this","sortedGoods","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","Button","type","onClick","variant","ButtonGroup","sx","Box","List","map","good","ListItem","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAqBKA,E,uHAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAe,CACbC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,YAAc,WACZ,EAAKC,SAAS,CAAEL,WAAW,KAR/B,EAWEM,wBAA0B,WACxB,EAAKD,SAAS,CAAEH,SAAUN,EAASW,WAZvC,EAeEC,iBAAmB,WACjB,EAAKH,SAAS,CAAEH,SAAUN,EAASa,UAhBvC,EAmBEC,cAAgB,WACd,EAAKL,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBArBzB,EAyBEU,YAAc,WACZ,EAAKN,SAAS,CAAEJ,YAAY,EAAOC,SAAUN,EAASO,QA1B1D,4CA6BE,WACE,MAA4CS,KAAKb,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SACzBW,EAlEV,SACEC,EACAZ,EACAD,GAGA,IAAMc,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQhB,GACN,KAAKN,EAASW,QACZ,OAAOU,EAAEE,cAAcD,GAEzB,KAAKtB,EAASa,OACZ,OAAOQ,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAITnB,EACKc,EAAaM,UAGfN,EAyCeO,CAClBzB,EAAiBK,EAAUD,GAG7B,OACE,sBAAKsB,UAAU,MAAf,WACIvB,GAEE,cAACwB,EAAA,EAAD,CACEC,KAAK,SACLC,QAASd,KAAKR,YACduB,QAAQ,YAHV,mBASH3B,GAEG,qCACE,eAAC4B,EAAA,EAAD,CACED,QAAQ,WACR,aAAW,wBACXE,GAAI,GAHN,UAKE,cAACL,EAAA,EAAD,CAAQC,KAAK,SAASC,QAASd,KAAKN,wBAApC,iCAGA,cAACkB,EAAA,EAAD,CAAQC,KAAK,SAASC,QAASd,KAAKJ,iBAApC,4BAGA,cAACgB,EAAA,EAAD,CAAQC,KAAK,SAASC,QAASd,KAAKF,cAApC,qBAGA,cAACc,EAAA,EAAD,CAAQC,KAAK,SAASC,QAASd,KAAKD,YAApC,sBAKF,cAACmB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAMR,UAAU,QAAhB,SACGV,EAAYmB,KAAI,SAACC,GAAD,OACf,cAACC,EAAA,EAAD,CAAUX,UAAU,cAApB,SACGU,GADoCA,oBAzE3D,GAAyBE,aC5DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4d5120b7.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Component } from 'react';\nimport './App.scss';\nimport { Button, ButtonGroup } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleStart = () => {\n    this.setState({ isStarted: true });\n  };\n\n  handleSortAlphabeticaly = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  handleSortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n    const sortedGoods = getReorderedGoods(\n      goodsFromServer, sortType, isReversed,\n    );\n\n    return (\n      <div className=\"App\">\n        {!isStarted\n          && (\n            <Button\n              type=\"button\"\n              onClick={this.handleStart}\n              variant=\"contained\"\n            >\n              Start\n            </Button>\n          )}\n\n        {isStarted\n          && (\n            <>\n              <ButtonGroup\n                variant=\"outlined\"\n                aria-label=\"outlined button group\"\n                sx={{}}\n              >\n                <Button type=\"button\" onClick={this.handleSortAlphabeticaly}>\n                  Sort alphabetically\n                </Button>\n                <Button type=\"button\" onClick={this.handleSortLength}>\n                  Sort by length\n                </Button>\n                <Button type=\"button\" onClick={this.handleReverse}>\n                  Reverse\n                </Button>\n                <Button type=\"button\" onClick={this.handleReset}>\n                  Reset\n                </Button>\n              </ButtonGroup>\n\n              <Box>\n                <List className=\"Goods\">\n                  {sortedGoods.map((good) => (\n                    <ListItem className=\"Goods__item\" key={good}>\n                      {good}\n                    </ListItem>\n                  ))}\n                </List>\n              </Box>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}